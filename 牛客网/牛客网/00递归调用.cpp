//递归调用
//1、判断是否为子树
//2、对树的结构进行操作
//3、对树的数值进行操作

/*
03从尾到头打印链表
04两个栈实现一个队列
06斐波那些数列(非递归版)
10二进制中1的个数
13输出链表的倒数第k个节点
14翻转链表
15合并两个链表_反向理解递归
16树的子结构_正向理解递归
17镜像二叉树
19实现栈中最小的元素
21按层打印节点
23查找二叉树的路径和
24二叉搜索树的双向链表
28连续子数组的最大和
30把数组排成最小的数
34查找两个链表的公共节点
35统计有序数组某个数出现的次数_二分查找
36二叉树的深度
37判断平衡二叉树
39输出和为S的序列
41将字符串左移n位
42翻转单词
43扑克牌顺子
44圆圈中最后剩下的数
54字符流中第一个不重复的字符
55找到链表环的入口
56删除链表的重复节点
58回形打印二叉树
61找搜索二叉树第k大的值
*/